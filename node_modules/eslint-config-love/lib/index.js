"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
const utils_1 = require("@typescript-eslint/utils");
const typescript_eslint_1 = require("typescript-eslint");
const importPlugin = __importStar(require("eslint-plugin-import"));
const nPlugin = __importStar(require("eslint-plugin-n"));
const promisePlugin = __importStar(require("eslint-plugin-promise"));
const rules_1 = require("./rules");
const eslintRuleNames = [...new utils_1.TSESLint.Linter().getRules().keys()];
const namesOfEslintRulesForWhichWeAreUsingTsEquivalents = eslintRuleNames.filter((name) => Object.hasOwn(rules_1.rules, `@typescript-eslint/${name}`));
const config = {
    languageOptions: {
        parser: typescript_eslint_1.parser,
        parserOptions: {
            projectService: true,
        },
    },
    plugins: {
        '@typescript-eslint': typescript_eslint_1.plugin,
        import: importPlugin,
        n: nPlugin,
        promise: promisePlugin,
    },
    rules: {
        ...Object.fromEntries(namesOfEslintRulesForWhichWeAreUsingTsEquivalents.map((name) => [
            name,
            ['off'],
        ])),
        ...rules_1.rules,
    },
};
module.exports = config;
//# sourceMappingURL=index.js.map