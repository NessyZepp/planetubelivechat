/// <reference types="fluent-ffmpeg" />
import { FFmpegCommandWrapperOptions } from './ffmpeg-command-wrapper';
export declare class FFmpegLive {
    private readonly commandWrapper;
    constructor(options: FFmpegCommandWrapperOptions);
    getLiveTranscodingCommand(options: {
        inputUrl: string;
        outPath: string;
        masterPlaylistName: string;
        toTranscode: {
            resolution: number;
            fps: number;
        }[];
        bitrate: number;
        ratio: number;
        hasAudio: boolean;
        segmentListSize: number;
        segmentDuration: number;
    }): Promise<import("fluent-ffmpeg").FfmpegCommand>;
    getLiveMuxingCommand(options: {
        inputUrl: string;
        outPath: string;
        masterPlaylistName: string;
        segmentListSize: number;
        segmentDuration: number;
    }): import("fluent-ffmpeg").FfmpegCommand;
    private addDefaultLiveHLSParams;
}
//# sourceMappingURL=ffmpeg-live.d.ts.map