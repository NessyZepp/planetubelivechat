import { Request, Response } from 'express';
import { VideoLoadType } from '../../../lib/model-loaders';
import { MUser, MUserAccountId, MUserId, MVideo, MVideoAccountLight } from '../../../types/models';
import { UserRight } from '../../../../shared/models';
declare function doesVideoExist(id: number | string, res: Response, fetchType?: VideoLoadType): Promise<boolean>;
declare function doesVideoFileOfVideoExist(id: number, videoIdOrUUID: number | string, res: Response): Promise<boolean>;
declare function doesVideoChannelOfAccountExist(channelId: number, user: MUserAccountId, res: Response): Promise<boolean>;
declare function checkCanSeeVideo(options: {
    req: Request;
    res: Response;
    paramId: string;
    video: MVideo;
}): Promise<boolean>;
declare function checkCanAccessVideoStaticFiles(options: {
    video: MVideo;
    req: Request;
    res: Response;
    paramId: string;
}): Promise<boolean>;
declare function checkUserCanManageVideo(user: MUser, video: MVideoAccountLight, right: UserRight, res: Response, onlyOwned?: boolean): boolean;
declare function checkUserQuota(user: MUserId, videoFileSize: number, res: Response): Promise<boolean>;
export { doesVideoChannelOfAccountExist, doesVideoExist, doesVideoFileOfVideoExist, checkCanAccessVideoStaticFiles, checkUserCanManageVideo, checkCanSeeVideo, checkUserQuota };
//# sourceMappingURL=videos.d.ts.map