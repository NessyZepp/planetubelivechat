import memoizee from 'memoizee';
import { Model } from 'sequelize-typescript';
import { AttributesOnly } from '../../../shared/typescript-utils';
import { AccountModel } from '../account/account';
export declare const getServerActor: (() => Promise<import("../actor/actor").ActorModel>) & memoizee.Memoized<() => Promise<import("../actor/actor").ActorModel>>;
export declare class ApplicationModel extends Model<Partial<AttributesOnly<ApplicationModel>>> {
    migrationVersion: number;
    latestPeerTubeVersion: string;
    nodeVersion: string;
    nodeABIVersion: number;
    Account: AccountModel;
    static countTotal(): Promise<number>;
    static load(): Promise<ApplicationModel>;
    static nodeABIChanged(): Promise<boolean>;
    static updateNodeVersions(): Promise<void>;
}
//# sourceMappingURL=application.d.ts.map