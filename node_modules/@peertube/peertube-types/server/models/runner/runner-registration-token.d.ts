import { Model } from 'sequelize-typescript';
import { MRunnerRegistrationToken } from '../../types/models/runners';
import { RunnerRegistrationToken } from '../../../shared/models';
import { AttributesOnly } from '../../../shared/typescript-utils';
import { RunnerModel } from './runner';
/**
 *
 * Tokens used by PeerTube runners to register themselves to the PeerTube instance
 *
 */
export declare class RunnerRegistrationTokenModel extends Model<Partial<AttributesOnly<RunnerRegistrationTokenModel>>> {
    registrationToken: string;
    createdAt: Date;
    updatedAt: Date;
    Runners: RunnerModel[];
    static load(id: number): Promise<RunnerRegistrationTokenModel>;
    static loadByRegistrationToken(registrationToken: string): Promise<RunnerRegistrationTokenModel>;
    static countTotal(): Promise<number>;
    static listForApi(options: {
        start: number;
        count: number;
        sort: string;
    }): Promise<{
        total: number;
        data: MRunnerRegistrationToken[];
    }>;
    toFormattedJSON(this: MRunnerRegistrationToken): RunnerRegistrationToken;
}
//# sourceMappingURL=runner-registration-token.d.ts.map