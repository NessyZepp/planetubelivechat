import { Model } from 'sequelize-typescript';
import { MRunner } from '../../types/models/runners';
import { Runner } from '../../../shared/models';
import { AttributesOnly } from '../../../shared/typescript-utils';
import { RunnerRegistrationTokenModel } from './runner-registration-token';
export declare class RunnerModel extends Model<Partial<AttributesOnly<RunnerModel>>> {
    runnerToken: string;
    name: string;
    description: string;
    lastContact: Date;
    ip: string;
    createdAt: Date;
    updatedAt: Date;
    runnerRegistrationTokenId: number;
    RunnerRegistrationToken: RunnerRegistrationTokenModel;
    static load(id: number): Promise<RunnerModel>;
    static loadByToken(runnerToken: string): Promise<RunnerModel>;
    static listForApi(options: {
        start: number;
        count: number;
        sort: string;
    }): Promise<{
        total: number;
        data: MRunner[];
    }>;
    toFormattedJSON(this: MRunner): Runner;
}
//# sourceMappingURL=runner.d.ts.map