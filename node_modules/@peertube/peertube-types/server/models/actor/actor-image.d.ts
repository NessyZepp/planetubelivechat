import { Model } from 'sequelize-typescript';
import { MActorImage, MActorImageFormattable } from '../../types/models';
import { ActivityIconObject, ActorImageType } from '../../../shared/models';
import { AttributesOnly } from '../../../shared/typescript-utils';
import { ActorImage } from '../../../shared/models/actors/actor-image.model';
import { ActorModel } from './actor';
export declare class ActorImageModel extends Model<Partial<AttributesOnly<ActorImageModel>>> {
    filename: string;
    height: number;
    width: number;
    fileUrl: string;
    onDisk: boolean;
    type: ActorImageType;
    createdAt: Date;
    updatedAt: Date;
    actorId: number;
    Actor: ActorModel;
    static removeFilesAndSendDelete(instance: ActorImageModel): void;
    static getSQLAttributes(tableName: string, aliasPrefix?: string): string[];
    static loadByName(filename: string): Promise<ActorImageModel>;
    static getImageUrl(image: MActorImage): string;
    toFormattedJSON(this: MActorImageFormattable): ActorImage;
    toActivityPubObject(): ActivityIconObject;
    getStaticPath(): string;
    getPath(): string;
    removeImage(): Promise<void>;
    isOwned(): boolean;
}
//# sourceMappingURL=actor-image.d.ts.map