import { processImage } from '../../helpers/image-utils';
import { httpBroadcast } from './workers/http-broadcast';
import { downloadImage } from './workers/image-downloader';
declare function downloadImageFromWorker(options: Parameters<typeof downloadImage>[0]): Promise<ReturnType<typeof downloadImage>>;
declare function processImageFromWorker(options: Parameters<typeof processImage>[0]): Promise<ReturnType<typeof processImage>>;
declare function parallelHTTPBroadcastFromWorker(options: Parameters<typeof httpBroadcast>[0]): Promise<ReturnType<typeof httpBroadcast>>;
declare function sequentialHTTPBroadcastFromWorker(options: Parameters<typeof httpBroadcast>[0]): Promise<ReturnType<typeof httpBroadcast>>;
export { downloadImageFromWorker, processImageFromWorker, parallelHTTPBroadcastFromWorker, sequentialHTTPBroadcastFromWorker };
//# sourceMappingURL=parent-process.d.ts.map