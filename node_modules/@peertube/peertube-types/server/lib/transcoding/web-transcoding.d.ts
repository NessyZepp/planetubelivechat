import { Job } from 'bullmq';
import { MVideoFile, MVideoFullLight } from '../../types/models';
import { VideoResolution } from '../../../shared/models';
export declare function optimizeOriginalVideofile(options: {
    video: MVideoFullLight;
    inputVideoFile: MVideoFile;
    quickTranscode: boolean;
    job: Job;
}): Promise<{
    transcodeType: "video" | "quick-transcode";
    videoFile: MVideoFile;
}>;
export declare function transcodeNewWebTorrentResolution(options: {
    video: MVideoFullLight;
    resolution: VideoResolution;
    fps: number;
    job: Job;
}): Promise<{
    video: MVideoFullLight;
    videoFile: MVideoFile;
}>;
export declare function mergeAudioVideofile(options: {
    video: MVideoFullLight;
    resolution: VideoResolution;
    fps: number;
    job: Job;
}): Promise<{
    video: MVideoFullLight;
    videoFile: MVideoFile;
}>;
export declare function onWebTorrentVideoFileTranscoding(options: {
    video: MVideoFullLight;
    videoFile: MVideoFile;
    videoOutputPath: string;
}): Promise<{
    video: MVideoFullLight;
    videoFile: MVideoFile;
}>;
//# sourceMappingURL=web-transcoding.d.ts.map