import { Transaction } from 'sequelize';
import { ActivityAudience, ActivityCreate } from '../../../../shared/models';
import { MActorLight, MCommentOwnerVideo, MLocalVideoViewerWithWatchSections, MVideoAccountLight, MVideoAP, MVideoPlaylistFull, MVideoRedundancyFileVideo, MVideoRedundancyStreamingPlaylistVideo } from '../../../types/models';
declare function sendCreateVideo(video: MVideoAP, transaction: Transaction): Promise<any>;
declare function sendCreateCacheFile(byActor: MActorLight, video: MVideoAccountLight, fileRedundancy: MVideoRedundancyStreamingPlaylistVideo | MVideoRedundancyFileVideo): Promise<any>;
declare function sendCreateWatchAction(stats: MLocalVideoViewerWithWatchSections, transaction: Transaction): Promise<any>;
declare function sendCreateVideoPlaylist(playlist: MVideoPlaylistFull, transaction: Transaction): Promise<any>;
declare function sendCreateVideoComment(comment: MCommentOwnerVideo, transaction: Transaction): Promise<any>;
declare function buildCreateActivity(url: string, byActor: MActorLight, object: any, audience?: ActivityAudience): ActivityCreate;
export { sendCreateVideo, buildCreateActivity, sendCreateVideoComment, sendCreateVideoPlaylist, sendCreateCacheFile, sendCreateWatchAction };
//# sourceMappingURL=send-create.d.ts.map