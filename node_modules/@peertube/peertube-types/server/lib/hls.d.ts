import { MStreamingPlaylist, MStreamingPlaylistFilesVideo, MVideo } from '../types/models';
declare function updateStreamingPlaylistsInfohashesIfNeeded(): Promise<void>;
declare function updatePlaylistAfterFileChange(video: MVideo, playlist: MStreamingPlaylist): Promise<void>;
declare function updateMasterHLSPlaylist(video: MVideo, playlistArg: MStreamingPlaylist): Promise<MStreamingPlaylistFilesVideo>;
declare function updateSha256VODSegments(video: MVideo, playlistArg: MStreamingPlaylist): Promise<MStreamingPlaylistFilesVideo>;
declare function buildSha256Segment(segmentPath: string): Promise<string>;
declare function downloadPlaylistSegments(playlistUrl: string, destinationDir: string, timeout: number, bodyKBLimit: number): Promise<void>;
declare function renameVideoFileInPlaylist(playlistPath: string, newVideoFilename: string): Promise<void>;
declare function injectQueryToPlaylistUrls(content: string, queryString: string): string;
export { updateMasterHLSPlaylist, updateSha256VODSegments, buildSha256Segment, downloadPlaylistSegments, updateStreamingPlaylistsInfohashesIfNeeded, updatePlaylistAfterFileChange, injectQueryToPlaylistUrls, renameVideoFileInPlaylist };
//# sourceMappingURL=hls.d.ts.map