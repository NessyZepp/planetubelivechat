import { FfprobeData } from 'fluent-ffmpeg';
import { VideoFileModel } from '../models/video/video-file';
import { MVideoWithAllFiles } from '../types/models';
import { VideoFileMetadata } from '../../shared/models';
declare function buildNewFile(options: {
    path: string;
    mode: 'web-video' | 'hls';
}): Promise<VideoFileModel>;
declare function removeHLSPlaylist(video: MVideoWithAllFiles): Promise<void>;
declare function removeHLSFile(video: MVideoWithAllFiles, fileToDeleteId: number): Promise<import("../types/models").MStreamingPlaylistFilesVideo>;
declare function removeAllWebTorrentFiles(video: MVideoWithAllFiles): Promise<MVideoWithAllFiles>;
declare function removeWebTorrentFile(video: MVideoWithAllFiles, fileToDeleteId: number): Promise<MVideoWithAllFiles>;
declare function buildFileMetadata(path: string, existingProbe?: FfprobeData): Promise<VideoFileMetadata>;
export { buildNewFile, removeHLSPlaylist, removeHLSFile, removeAllWebTorrentFiles, removeWebTorrentFile, buildFileMetadata };
//# sourceMappingURL=video-file.d.ts.map