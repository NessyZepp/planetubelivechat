/// <reference types="node" />
import { MStreamingPlaylistVideo, MVideo, MVideoFile } from '../../types/models';
declare function listHLSFileKeysOf(playlist: MStreamingPlaylistVideo): Promise<string[]>;
declare function storeHLSFileFromFilename(playlist: MStreamingPlaylistVideo, filename: string): Promise<string>;
declare function storeHLSFileFromPath(playlist: MStreamingPlaylistVideo, path: string): Promise<string>;
declare function storeHLSFileFromContent(playlist: MStreamingPlaylistVideo, path: string, content: string): Promise<string>;
declare function storeWebTorrentFile(video: MVideo, file: MVideoFile): Promise<string>;
declare function updateWebTorrentFileACL(video: MVideo, file: MVideoFile): Promise<void>;
declare function updateHLSFilesACL(playlist: MStreamingPlaylistVideo): Promise<void>;
declare function removeHLSObjectStorage(playlist: MStreamingPlaylistVideo): Promise<void>;
declare function removeHLSFileObjectStorageByFilename(playlist: MStreamingPlaylistVideo, filename: string): Promise<import("@aws-sdk/client-s3").DeleteObjectCommandOutput>;
declare function removeHLSFileObjectStorageByPath(playlist: MStreamingPlaylistVideo, path: string): Promise<import("@aws-sdk/client-s3").DeleteObjectCommandOutput>;
declare function removeHLSFileObjectStorageByFullKey(key: string): Promise<import("@aws-sdk/client-s3").DeleteObjectCommandOutput>;
declare function removeWebTorrentObjectStorage(videoFile: MVideoFile): Promise<import("@aws-sdk/client-s3").DeleteObjectCommandOutput>;
declare function makeHLSFileAvailable(playlist: MStreamingPlaylistVideo, filename: string, destination: string): Promise<string>;
declare function makeWebTorrentFileAvailable(filename: string, destination: string): Promise<string>;
declare function getWebTorrentFileReadStream(options: {
    filename: string;
    rangeHeader: string;
}): Promise<{
    response: import("@aws-sdk/client-s3").GetObjectCommandOutput;
    stream: import("stream").Readable;
}>;
declare function getHLSFileReadStream(options: {
    playlist: MStreamingPlaylistVideo;
    filename: string;
    rangeHeader: string;
}): Promise<{
    response: import("@aws-sdk/client-s3").GetObjectCommandOutput;
    stream: import("stream").Readable;
}>;
export { listHLSFileKeysOf, storeWebTorrentFile, storeHLSFileFromFilename, storeHLSFileFromPath, storeHLSFileFromContent, updateWebTorrentFileACL, updateHLSFilesACL, removeHLSObjectStorage, removeHLSFileObjectStorageByFilename, removeHLSFileObjectStorageByPath, removeHLSFileObjectStorageByFullKey, removeWebTorrentObjectStorage, makeWebTorrentFileAvailable, makeHLSFileAvailable, getWebTorrentFileReadStream, getHLSFileReadStream };
//# sourceMappingURL=videos.d.ts.map